[{"/Users/siddharth/React/Jamming/jamming/src/index.js":"1","/Users/siddharth/React/Jamming/jamming/src/reportWebVitals.js":"2","/Users/siddharth/React/Jamming/jamming/src/Components/App/App.js":"3","/Users/siddharth/React/Jamming/jamming/src/Components/SearchBar/SearchBar.js":"4","/Users/siddharth/React/Jamming/jamming/src/Components/SearchResults/SearchResults.js":"5","/Users/siddharth/React/Jamming/jamming/src/Components/Playlist/Playlist.js":"6","/Users/siddharth/React/Jamming/jamming/src/Components/TrackList/TrackList.js":"7","/Users/siddharth/React/Jamming/jamming/src/Components/Track/Track.js":"8","/Users/siddharth/React/Jamming/jamming/src/util/Spotify.js":"9"},{"size":515,"mtime":1608700059871,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1608654263346,"results":"12","hashOfConfig":"11"},{"size":2342,"mtime":1608893417514,"results":"13","hashOfConfig":"11"},{"size":746,"mtime":1608896034422,"results":"14","hashOfConfig":"11"},{"size":424,"mtime":1608812113521,"results":"15","hashOfConfig":"11"},{"size":807,"mtime":1608830354220,"results":"16","hashOfConfig":"11"},{"size":548,"mtime":1608814492155,"results":"17","hashOfConfig":"11"},{"size":942,"mtime":1608814650626,"results":"18","hashOfConfig":"11"},{"size":2628,"mtime":1608895533003,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1bgh2vn",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/Users/siddharth/React/Jamming/jamming/src/index.js",[],["41","42"],"/Users/siddharth/React/Jamming/jamming/src/reportWebVitals.js",[],"/Users/siddharth/React/Jamming/jamming/src/Components/App/App.js",[],"/Users/siddharth/React/Jamming/jamming/src/Components/SearchBar/SearchBar.js",[],"/Users/siddharth/React/Jamming/jamming/src/Components/SearchResults/SearchResults.js",[],"/Users/siddharth/React/Jamming/jamming/src/Components/Playlist/Playlist.js",[],"/Users/siddharth/React/Jamming/jamming/src/Components/TrackList/TrackList.js",[],"/Users/siddharth/React/Jamming/jamming/src/Components/Track/Track.js",[],["43","44"],"/Users/siddharth/React/Jamming/jamming/src/util/Spotify.js",["45"],"import { Playlist } from \"../Components/Playlist/Playlist\";\n\nconst clientId = \"c2f064d4780b4854b5ae0baeef077b10\";\nconst redirectUri = \"http://that-song.surge.sh\";\nlet token;\n\nconst Spotify = {\n  getAccessToken() {\n    if (token) return token;\n\n    const tokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expirationMatch = window.location.href.match(/expires_in=([^&]*)/);\n\n    if (tokenMatch && expirationMatch) {\n      token = tokenMatch[1];\n      const expiresIn = Number(expirationMatch[1]);\n\n      // clear pararameters\n      window.setTimeout(() => (token = \"\"), expiresIn * 1000);\n      window.history.pushState(\"Access Token\", null, \"/\");\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n      window.location = accessUrl;\n    }\n  },\n\n  search(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: { Authorization: `Bearer ${accessToken}` },\n    })\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        if (!jsonResponse.tracks) {\n          return [];\n        }\n        return jsonResponse.tracks.items.map((track) => ({\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri,\n        }));\n      });\n  },\n\n  savePlaylist(name, trackUris) {\n    if (!name || !trackUris) {\n      return;\n    }\n\n    const accessToken = Spotify.getAccessToken();\n    const headers = { Authorization: `Bearer ${accessToken}` };\n    let userId;\n    return fetch(\"https://api.spotify.com/v1/me\", {\n      headers: headers,\n    })\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        userId = jsonResponse.id;\n\n        return fetch(\n          `https://api.spotify.com/v1/users/${userId}/playlists\n        `,\n          {\n            headers: headers,\n            method: \"POST\",\n            body: JSON.stringify({ name: name }),\n          }\n        )\n          .then((response) => response.json())\n          .then((jsonResponse) => {\n            const playlistId = jsonResponse.id;\n            return fetch(\n              `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks\n            `,\n              {\n                headers: headers,\n                method: \"POST\",\n                body: JSON.stringify({ uris: trackUris }),\n              }\n            );\n          });\n      });\n  },\n};\n\nexport default Spotify;\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":18},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],["56"],["57"],"no-unused-vars","'Playlist' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]